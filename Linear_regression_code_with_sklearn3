# using pandas package to import features from csv file

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import numpy as np

# Read data from a pandas DataFrame
df = pd.read_csv('file_name.csv')  # Replace 'your_dataset.csv' with your actual dataset file

# Separate the features (X) and labels (y) from the DataFrame
X = df['X']  # Replace 'feature1', 'feature2', 'feature3' with the actual feature column names
y = df['y']  # Replace 'label' with the actual label column name

X_arr=X.values.reshape(-1, 1)

y_arr=y.values.reshape(-1, 1)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_arr, y_arr, test_size=0.2, random_state=42)

# Create an instance of the model (Linear Regression in this case)
model = LinearRegression()

# Train the model using the training data
model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Use the trained model to make predictions on new data
new_data = np.array([[6], [7], [8]]) # use your own data for predictions.
new_predictions = model.predict(new_data)
print("Predictions for new data:", new_predictions)
